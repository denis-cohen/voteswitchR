pkgs <- c(
"methods",
"Rcpp",
"RcppParallel",
"rstan",
"rstantools",
"anesrake",
"countrycode",
"dplyr",
"DT",
"hot.deck",
"labelled",
"lubridate",
"magrittr",
"rio",
"shiny",
"shinyalert",
"shinyjs",
"tidy",
"BH",
"Rcpp",
"RcppEigen",
"RcppParallel",
"rstan",
"StanHeaders"
)
lapply(pkgs, install.packages, force = TRUE, character.only = TRUE)
pkgs <- c(
"methods",
"Rcpp",
"RcppParallel",
"rstan",
"rstantools",
"anesrake",
"countrycode",
"dplyr",
"DT",
"hot.deck",
"labelled",
"lubridate",
"magrittr",
"rio",
"shiny",
"shinyalert",
"shinyjs",
"tidy",
"BH",
"Rcpp",
"RcppEigen",
"RcppParallel",
"rstan",
"StanHeaders"
)
lapply(pkgs, install.packages, character.only = TRUE)
install.packages("tidyr")
try(roxygen2::roxygenize(load_code = sourceDir), silent = TRUE)
pkgbuild::compile_dll()
roxygen2::roxygenize()
devtools::document()
devtools::check()
devtools::check()
roxygen2::roxygenize()
try(roxygen2::roxygenize(load_code = sourceDir), silent = TRUE)
pkgbuild::compile_dll()
roxygen2::roxygenize()
devtools::document()
devtools::check()
library(voteswitchr)
library(voteswitchR)
?voteswitchR
?voteswitchR-package
voteswitchR::mappings
roxygen2::roxygenize()
roxygen2::roxygenize()
try(roxygen2::roxygenize(load_code = sourceDir), silent = TRUE)
try(roxygen2::roxygenize(load_code = sourceDir), silent = FALSE)
example(source)
try(roxygen2::roxygenize(load_code = sourceDir), silent = FALSE)
pkgbuild::compile_dll()
roxygen2::roxygenize()
example(source)
try(roxygen2::roxygenize(load_code = sourceDir), silent = FALSE)
pkgbuild::compile_dll()
roxygen2::roxygenize()
# ---- Documentation ----
example(source)
try(roxygen2::roxygenize(load_code = sourceDir), silent = FALSE)
# ---- Documentation ----
example(source)
try(roxygen2::roxygenize(load_code = sourceDir), silent = FALSE)
# ---- Documentation ----
example(source)
try(roxygen2::roxygenize(load_code = sourceDir), silent = FALSE)
# ---- Initialization, compilation, documentation ----
example(source)
try(roxygen2::roxygenize(load_code = sourceDir), silent = FALSE)
example(source)
try(roxygen2::roxygenize(load_code = sourceDir), silent = FALSE)
pkgbuild::compile_dll()
roxygen2::roxygenize()
# ---- Documentation ----
example(source)
try(roxygen2::roxygenize(load_code = sourceDir), silent = FALSE)
?roxygenize
# ---- Documentation ----
example(source)
try(roxygen2::roxygenize(load_code = sourceDir,
clean = TRUE,
INSTALL_opts = "--no-multiarch"),
silent = FALSE
)
# ---- Documentation ----
example(source)
try(roxygen2::roxygenize(load_code = sourceDir,
clean = TRUE),
silent = FALSE
)
sessionInfo()
try(roxygen2::roxygenize(load_code = sourceDir,
clean = TRUE),
silent = TRUE
)
# ---- Documentation ----
example(source)
try(roxygen2::roxygenize(load_code = sourceDir,
clean = TRUE),
silent = TRUE
)
# ---- Documentation ----
example(source)
try(roxygen2::roxygenize(load_code = sourceDir,
clean = TRUE),
silent = TRUE
)
pkgbuild::compile_dll()
roxygen2::roxygenize()
# ---- Documentation ----
options(install.opts = list(roxygen2 = "--no-multiarch"))
example(source)
try(roxygen2::roxygenize(load_code = sourceDir,
clean = TRUE),
silent = TRUE
)
pkgbuild::compile_dll()
roxygen2::roxygenize()
devtools::document()
# ---- Checks ----
devtools::check()
install.packages("knitr")
# ---- Checks ----
devtools::check()
sessionInfo()
# ---- Checks ----
devtools::check()
library(voteswitchR)
voteswitchR::Compare
devtools::document()
library(voteswitchR)
roxygen2::roxygenize()
library(voteswitchR)
# ---- Checks ----
devtools::check()
# ---- Checks ----
devtools::check()
?voteswitchR::run_mavcl
?voteswitchR::build_data_file
voteswitchR::build_data_file()
shinyalert::useShinyalert()
useShinyjs
?useShinyjs
# ---- Checks ----
devtools::check()
# ---- Checks ----
devtools::check()
library(voteswitchR)
voteswitchR::build_data_file()
# ---- Checks ----
devtools::check()
usethis::use_git_config(user.name = "denis-cohen",
user.email = "denis.cohen.132@gmail.com")
## set personal access token:
credentials::set_github_pat("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")
remotes::install_github("denis-cohen/voteswitchR",
auth_user = "denis-cohen")
usethis::use_git_config(user.name = "denis-cohen",
user.email = "denis.cohen.132@gmail.com")
## set personal access token:
credentials::set_github_pat("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")
## set personal access token:
credentials::set_github_pat("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")
devtools::check()
?voteswitchR
?voteswitchR-package
voteswitchR::addNextMethod()
voteswitchR::addNextMethod
?addNextMethod
?amelia
library(Amelia)
library(AmeliaII)
install.packages("Amelia")
library(amelia)
library(Ameli)
library(Amelia)
?amelia
?not
library(voteswitchR)
?library
?install.packages
library("voteswitchR", lib.loc=".")
library("voteswitchR", lib.loc="../")
gsub("\\\\", "/", readClipboard())
## Detach if loaded
if ("voteswitchR" %in% (.packages())) {
detach(package:voteswitchR, unload = TRUE)
}
# Uninstall if installed
if ("voteswitchR" %in% installed.packages()) {
remove.packages("voteswitchR")
}
# Install if not installed
if (!("devtools" %in% installed.packages())) {
install.packages("devtools")
}
# Load from GitHub
library(devtools)
devtools::install_github("denis-cohen/voteswitchR",
auth_token = ""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"")
3 # don't update packages
# Load package and execute function
library(voteswitchR)
voteswitchR::build_data_file()
## Detach if loaded
if ("voteswitchR" %in% (.packages())) {
detach(package:voteswitchR, unload = TRUE)
}
# Uninstall if installed
if ("voteswitchR" %in% installed.packages()) {
remove.packages("voteswitchR")
}
# Install if not installed
if (!("devtools" %in% installed.packages())) {
install.packages("devtools")
}
# Load from GitHub
library(devtools)
devtools::install_github("denis-cohen/voteswitchR",
auth_token = ""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"")
devtools::install_github("denis-cohen/voteswitchR",
auth_token = "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")
devtools::install_github("denis-cohen/voteswitchR",
auth_token = "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",
force = TRUE)
## Detach if loaded
if ("voteswitchR" %in% (.packages())) {
detach(package:voteswitchR, unload = TRUE)
}
# Uninstall if installed
if ("voteswitchR" %in% installed.packages()) {
remove.packages("voteswitchR")
}
# Install if not installed
if (!("devtools" %in% installed.packages())) {
install.packages("devtools")
}
# Load from GitHub
library(devtools)
devtools::install_github("denis-cohen/voteswitchR",
auth_token = "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",
force = TRUE)
## Detach if loaded
if ("voteswitchR" %in% (.packages())) {
detach(package:voteswitchR, unload = TRUE)
}
# Uninstall if installed
if ("voteswitchR" %in% installed.packages()) {
remove.packages("voteswitchR")
}
# Install if not installed
if (!("devtools" %in% installed.packages())) {
install.packages("devtools")
}
# Load from GitHub
library(devtools)
devtools::install_github("denis-cohen/voteswitchR",
auth_token = "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",
force = TRUE)
## Detach if loaded
if ("voteswitchR" %in% (.packages())) {
detach(package:voteswitchR, unload = TRUE)
}
# Uninstall if installed
if ("voteswitchR" %in% installed.packages()) {
remove.packages("voteswitchR")
}
# Install if not installed
if (!("devtools" %in% installed.packages())) {
install.packages("devtools")
}
# Load from GitHub
library(devtools)
devtools::install_github("denis-cohen/voteswitchR",
auth_token = "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",
force = TRUE)
# Load package and execute function
library(voteswitchR)
## Detach if loaded
if ("voteswitchR" %in% (.packages())) {
detach(package:voteswitchR, unload = TRUE)
}
# Uninstall if installed
if ("voteswitchR" %in% installed.packages()) {
remove.packages("voteswitchR")
}
# Install if not installed
if (!("devtools" %in% installed.packages())) {
install.packages("devtools")
}
# Load from GitHub
library(devtools)
devtools::install_github("denis-cohen/voteswitchR",
auth_token = "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",
force = TRUE)
# Load package and execute function
library(voteswitchR)
voteswitchR::build_data_file()
## Detach if loaded
if ("voteswitchR" %in% (.packages())) {
detach(package:voteswitchR, unload = TRUE)
}
# Uninstall if installed
if ("voteswitchR" %in% installed.packages()) {
remove.packages("voteswitchR")
}
# Install if not installed
if (!("devtools" %in% installed.packages())) {
install.packages("devtools")
}
# Load from GitHub
library(devtools)
devtools::install_github("denis-cohen/voteswitchR",
auth_token = "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",
force = TRUE)
# Load package and execute function
library(voteswitchR)
voteswitchR::build_data_file()
## Detach if loaded
if ("voteswitchR" %in% (.packages())) {
detach(package:voteswitchR, unload = TRUE)
}
# Uninstall if installed
if ("voteswitchR" %in% installed.packages()) {
remove.packages("voteswitchR")
}
# Install if not installed
if (!("devtools" %in% installed.packages())) {
install.packages("devtools")
}
# Load from GitHub
library(devtools)
devtools::install_github("denis-cohen/voteswitchR",
auth_token = "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",
force = TRUE)
# Load package and execute function
library(voteswitchR)
voteswitchR::build_data_file()
## Detach if loaded
if ("voteswitchR" %in% (.packages())) {
detach(package:voteswitchR, unload = TRUE)
}
# Uninstall if installed
if ("voteswitchR" %in% installed.packages()) {
remove.packages("voteswitchR")
}
# Install if not installed
if (!("devtools" %in% installed.packages())) {
install.packages("devtools")
}
# Load from GitHub
library(devtools)
devtools::install_github("denis-cohen/voteswitchR",
auth_token = "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",
force = TRUE)
# Load package and execute function
library(voteswitchR)
voteswitchR::build_data_file()
## Detach if loaded
if ("voteswitchR" %in% (.packages())) {
detach(package:voteswitchR, unload = TRUE)
}
# Uninstall if installed
if ("voteswitchR" %in% installed.packages()) {
remove.packages("voteswitchR")
}
# Install if not installed
if (!("devtools" %in% installed.packages())) {
install.packages("devtools")
}
# Load from GitHub
library(devtools)
devtools::install_github("denis-cohen/voteswitchR",
auth_token = "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",
force = TRUE)
restart
## Detach if loaded
if ("voteswitchR" %in% (.packages())) {
detach(package:voteswitchR, unload = TRUE)
}
# Uninstall if installed
if ("voteswitchR" %in% installed.packages()) {
remove.packages("voteswitchR")
}
# Install if not installed
if (!("devtools" %in% installed.packages())) {
install.packages("devtools")
}
# Load from GitHub
library(devtools)
devtools::install_github("denis-cohen/voteswitchR",
auth_token = "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",
force = TRUE)
# Load package and execute function
library(voteswitchR)
voteswitchR::build_data_file()
library(dplyr)
library(usethis)
library(readr)
available_data <- readr::read_csv("../dat/map/available_data.csv") %>%
dplyr::mutate(election_date = as.Date(election_date)) %>%
dplyr::mutate_if(is.character, list( ~ na_if(., ""))) %>%
dplyr::select(any_of(c("elec_id_old",
"do_file")))
recodes <- read.csv("../dat/map/recodes.csv")  %>%
dplyr::mutate(election_date = as.Date(election_date)) %>%
dplyr::mutate_if(is.character, list( ~ na_if(., "")))
mappings <- paste0(
"https://docs.google.com/spreadsheets/d/",
"1YUEoX3oXrUNVCa0Pk3JWCHDVGUz94mLlglLN_vwWkVY/edit#gid=1400953196"
) %>%
googlesheets4::read_sheet(sheet = "mappings",
na = c("", "NA"),
trim_ws = TRUE)
names(mappings)
mappings <- mappings %>%
dplyr::select(-contains("gender"),-ends_with("_"))
